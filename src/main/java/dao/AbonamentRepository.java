package dao;

import dao.mappers.IMapResultSetIntoEntity;
import dao.model.Abonament;
import dao.uow.IUnitOfWork;
import java.sql.Connection;
import java.sql.SQLException;

public class AbonamentRepository extends RepositoryBase<Abonament> {

    public AbonamentRepository(Connection connection, IMapResultSetIntoEntity<Abonament> mapper, IUnitOfWork uow) {
        super(connection, mapper, uow);
    }

    @Override
    public String tableName() {
        return "Abonamenty";
    }

    @Override
    public String createTableSql() {

        return "create table "
                + tableName()
                + " id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
                + " data_rozpoczecia date,"
                + "data_zakonczenia date,"
                + "id_zmarlego int ,"
                + "id_uzytkownika int,"
                + "FOREIGN KEY (id_uzytkownika) REFERENCES Uzytkownicy(ID),"
                + "FOREIGN KEY (id_zmarlego) REFERENCES Zmarli(ID))";
    }

    @Override
    public String insertSql() {
        return "insert into "
                + tableName()
                + " (data_rozpoczecia,data_zakonczenia,id_zmarlego,id_uzytkownika) "
                + "values (?,?,?,?) ";
    }

    @Override
    public String updateSql() {
        return "update "
                + tableName()
                + " set (data_rozpoczecia,data_zakonczenia,id_zmarlego,id_uzytkownika)= "
                + "(?,?,?,?) "
                + "where id=?";
    }

    @Override
    public void insertPrepare(Abonament entity) throws SQLException {
        insert.setDate(1, entity.getDataRozpoczecia());
        insert.setDate(2, entity.getDataZakonczenia());
        insert.setInt(3, entity.getIdZmarlego());
        insert.setInt(4, entity.getIdUsera());
    }

    @Override
    public void updatePrepare(Abonament entity) throws SQLException {
        update.setDate(1, entity.getDataRozpoczecia());
        update.setDate(2, entity.getDataZakonczenia());
        update.setInt(3, entity.getIdZmarlego());
        update.setInt(4, entity.getIdUsera());
        update.setInt(5, entity.getId());
    }

}
